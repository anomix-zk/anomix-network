syntax = "proto3";

package apiIndexer;

service ApiIndexer {
  rpc checkAcctViewKeyRegistered (CheckAcctViewKeyRegisteredReq) returns (CheckAcctViewKeyRegisteredResp) {}
  rpc checkAliasAlignWithViewKey (CheckAliasAlignWithViewKeyReq) returns (CheckAliasAlignWithViewKeyResp) {}
  rpc queryBlockByBlockHash (QueryBlockByBlockHashReq) returns (QueryBlockByBlockHashResp){}
  rpc queryBlockByBlockHeight (QueryBlockByBlockHeightReq) returns (QueryBlockByBlockHeightResp){}
  rpc queryByTxHashes (QueryByTxHashesReq) returns (QueryByTxHashesResp){}
  rpc queryAcctViewKeyByAlias (QueryAcctViewKeyByAliasReq) returns (QueryAcctViewKeyByAliasResp){}
  rpc queryAliasByAcctViewKey (QueryAliasByAcctViewKeyReq) returns (QueryAliasByAcctViewKeyResp){}
  rpc queryAssetsInBlocks (QueryAssetsInBlocksReq) returns (QueryAssetsInBlocksResp){}
  rpc queryPartialByBlockHeight (QueryPartialByBlockHeightReq) returns (QueryPartialByBlockHeightResp){}
  rpc queryLatestBlockHeight () returns (QueryLatestBlockHeightResp){}

  rpc queryPendingTxs (QueryPendingTxsReq) returns (QueryPendingTxsResp){}

  rpc queryTxByNoteHashx (QueryTxByNoteHashxReq) returns (QueryTxByNoteHashxResp) {}
  rpc queryTxByNullifier (QueryTxByNullifierReq) returns (QueryTxByNullifierResp) {}
}

message CheckAcctViewKeyRegisteredReq{
    string acctViewKey= 1 ;
    bool includePending = 2;
}

message CheckAcctViewKeyRegisteredResp{
  int32 code = 1;
  bool data = 2;
  string msg = 3;
}


message CheckAliasAlignWithViewKeyReq{
    string aliasHash= 1 ;
    string acctViewKey= 2 ;
    bool includePending = 3;
}

message CheckAliasAlignWithViewKeyResp{
  int32 code = 1;
  bool data = 2;
  string msg = 3;
}

message QueryBlockByBlockHashReq{
  string blockHash = 1;
}

message QueryBlockByBlockHashResp{
  int32 code = 1;
  message data {
    string blockHash = 1;
    // TODO BlockDto
    //
    //
  };
  string msg = 3;
}

message QueryByTxHashesReq{
  repeated string txHashes = 1;
}
message QueryByTxHashesResp{
  int32 code = 1;
  message data {
    string blockHash = 1;
    // TODO BlockDto
    //
    //
  };
  string msg = 3;
}

message QueryBlockByBlockHeightReq{
  int64 blockHeight = 1;
}
message QueryBlockByBlockHeightResp{
  int32 code = 1;
  message data {
    string blockHash = 1;
    // TODO BlockDto
    //
    //
  };
  string msg = 3;
}

message QueryAcctViewKeyByAliasReq {
  string aliashash =1;
}
message QueryAcctViewKeyByAliasResp{
  int32 code = 1;
  message data {
    repeated string acctViewKeys = 1;
  };
  string msg = 3;
}

message QueryAliasByAcctViewKeyReq {
  string aliashash =1;
}

message QueryAliasByAcctViewKeyResp{
  int32 code = 1;
  message data {
    string alias = 1;
    string aliasInfo = 2;
  };
  string msg = 3;
}

message QueryAssetsInBlocksReq{
  repeated int32 blocks = 1;
  message range {
    int64 from = 1;
    int64 take = 2;
  };
  int32 flag = 3;
}

message QueryAssetsInBlocksResp{
  int32 code = 1;
  message data {
    int32  blockHeight= 1;
    string blockHash= 2;
    string l1TxHash= 3;

    int32 status= 4;
    /**
     * L2 tx list
     */
    // txList= L2TxSimpleDto[];

    int32 createdTs= 5;

    int32 finalizedTs= 6;
  };
  string msg = 3;
}

message QueryPartialByBlockHeightReq{
  repeated int32 blockHeightList = 1;
  repeated string fieldNames = 2;
}

message QueryPartialByBlockHeightResp{
  int32 code = 1;
  message data {
    string name = 1;
    int32 amount =2;
  };
  string msg = 3;
}

message QueryAssetsInBlocksReq {
  repeated int32 blocks = 1;
  message range {
    int64 from = 1;
    int64 take = 2;
  };
  int32 flag = 3;
}

message AssetsInBlockDto {
  int32 blockHeight = 1;
  string blockHash = 2;
  string l1TxHash = 3;
  int32 status = 4;
  // txList: L2TxSimpleDto[];
  int32 createdTs = 5;
  int32 finalizedTs = 6;
}

message QueryPartialByBlockHeightResp{
  int32 code = 1;
  message data {
    repeated AssetsInBlockDto dto = 1;
  };
  string msg = 3;
}

message QueryLatestBlockHeightResp {
    int32 code = 1;
  int32 data = 2;
  string msg = 3;
}

message QueryPendingTxsReq {
  repeated string txHashes = 1;
}

// from L2TxSimpleDto
message QueryPendingTxsResp {
  int32 code = 1;
  message data {
    int32 id = 1;
    string txHash = 2;
    string actionType = 3;
    string nullifier1 = 4;
    string nullifierIdx1 = 5;
    string nullifier2 = 6;
    string  nullifierIdx2 = 7;
    string outputNoteCommitment1 = 8;
    string outputNoteCommitmentIdx1 = 9;
    string outputNoteCommitment2 = 10;
    string outputNoteCommitmentIdx2 = 11;
    string publicValue= 12;
    string publicOwner = 13;
    string publicAssetId = 14;
    string dataRoot = 15;
    string depositRoot = 16;
    string depositIndex = 17;
    string txFee = 18;
    string txFeeAssetId = 19;
    // extraData
  };
  string msg = 3;
}

message QueryTxByNoteHashxReq {
    repeated string notehashes = 1;
}

// from L2TxSimpleDto
message QueryTxByNoteHashxResp {
  int32 code = 1;
  message data {
    int32 id = 1;
    string txHash = 2;
    string actionType = 3;
    string nullifier1 = 4;
    string nullifierIdx1 = 5;
    string nullifier2 = 6;
    string  nullifierIdx2 = 7;
    string outputNoteCommitment1 = 8;
    string outputNoteCommitmentIdx1 = 9;
    string outputNoteCommitment2 = 10;
    string outputNoteCommitmentIdx2 = 11;
    string publicValue= 12;
    string publicOwner = 13;
    string publicAssetId = 14;
    string dataRoot = 15;
    string depositRoot = 16;
    string depositIndex = 17;
    string txFee = 18;
    string txFeeAssetId = 19;
    // extraData
  };
  string msg = 3;
}

message QueryTxByNullifierReq {
  repeated string nullifierhashes = 1;
}

message QueryTxByNullifierResp {
  int32 code = 1;
  message data {
    int32 id = 1;
    string txHash = 2;
    string actionType = 3;
    string nullifier1 = 4;
    string nullifierIdx1 = 5;
    string nullifier2 = 6;
    string  nullifierIdx2 = 7;
    string outputNoteCommitment1 = 8;
    string outputNoteCommitmentIdx1 = 9;
    string outputNoteCommitment2 = 10;
    string outputNoteCommitmentIdx2 = 11;
    string publicValue= 12;
    string publicOwner = 13;
    string publicAssetId = 14;
    string dataRoot = 15;
    string depositRoot = 16;
    string depositIndex = 17;
    string txFee = 18;
    string txFeeAssetId = 19;
    // extraData
  };
  string msg = 3;
}
