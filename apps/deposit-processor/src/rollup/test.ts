
import { AccountUpdate, Field, PublicKey, Mina, PrivateKey, Reducer } from 'o1js';
import { getEncryptedNoteFromFieldData, EncryptedNoteFieldData } from "@anomix/circuits";
import fs from 'fs';

console.log('1:');
let action0 = Field('20986126668493993398462131840061171016507078919388209941587242801436282410610');
let action1 = Field('20520108244406485857950123757550581788960680908630507722340491031217391541989');
let action2 = Field('9955960142577905062544990411100323122468140434235100136781511053578923994435');
calc();

function calc() {
    let currentActionsHashX = Reducer.initialActionState;

    currentActionsHashX = AccountUpdate.Actions.updateSequenceState(
        currentActionsHashX,
        AccountUpdate.Actions.hash([action0.toFields()]) // 
    );
    console.log('currentActionsHashX:' + currentActionsHashX.toString());

    currentActionsHashX = AccountUpdate.Actions.updateSequenceState(
        currentActionsHashX,
        AccountUpdate.Actions.hash([action1.toFields()]) // 
    );
    console.log('currentActionsHashX:' + currentActionsHashX.toString());

    currentActionsHashX = AccountUpdate.Actions.updateSequenceState(
        currentActionsHashX,
        AccountUpdate.Actions.hash([action2.toFields()]) // 
    );
    console.log('currentActionsHashX:' + currentActionsHashX.toString());
}


const enc1 = [
    "22455047204882618592956687795771522779077045086752032426974844743656746497948",
    "20257665178022819466835310829504989695553906353208863018531166220452982083496",
    "19714050330708016528181289832337543702103213788798631675959672432883500096434",
    "12311115260580130310083815705633400401578601635825553984903885175733702671938",
    "13205456743341077557867991930701867647661542122676834232687590844827668671424",
    "28920719554712199773764222292119239333580896067134033813249993011510602223185",
    "787968804535357633004888826529513324837584841856603643998918703579735032813",
    "22030249292687318960436701044980903534704071837663132867022896345176689027511",
    "28439433134333852812813859490192036332243121225586731990080517950191035933198",
    "28463279546920451054533784792930158017949023162501014156103866404290045413704",
    "12663295925257822067735359363992647437081521908053353841459567168057536183708",
    "23623626783496752597283083079530066934944194555015375871913761724749699437034",
    "22787415463721092042116179760069250989559874206994997202631346548312378704840",
    "23062947359123023452055135228359730689685076514703901344373614356053640737076",
    "2601104601225240287407421525145467000802045811129029336105066604194749711902",
    "15472579050319132163198378029358742484279457194798167802780254267520649446286",
    "13734049102334463271224681451651589894029987452404557437143563097686500803745",
    "16845220581041828355151904922628715865356627435861472489942536780720571468821",
    "19318472713303848121920981883417843394899601197796158718757224249963027238125",
    "19487027673998298884757438800637518294063507634408180413638518101170637193812",
    "26891417627266517680817741320443104987654742931417813649077016857959292491146",
    "8701619423008043156178139460351721109699074868300756588161303359638859795668",
    "320948088369157741575523022563537727763227308038611475343726000905324435876",
    "8854210277102510863322572522877994964186955030287157382502739571695733658014",
    "920304826872390179627763784875547167607474711040433794834490247695342868130",
    "21082150571644740814654256418433234205892333550398236775819632372271228804861",
    "825146836097478701280394916779125445467144136013450410264400739540",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0"
];

const enc1Str = await getEncryptedNoteFromFieldData(EncryptedNoteFieldData.fromFields(enc1.map(e => Field(e))));
fs.writeFileSync('./1.json', JSON.stringify(enc1Str));

const enc2 = ["23427311078073196964368024409295500067675433917769361647940798837077618657334",
    "23474089187121263492681884519618307194671857437565938245590114321150968442019",
    "12423705249097837373280904111765068155266544204276332273306103331481726819988",
    "19321638919256823862264982947550762570444535555483010720319231700012168826886",
    "3387025260446230666243539516374674614509035472242453573173553731253221819988",
    "24638801742982554251666781100854097001146450598530407039674477120361136564333",
    "15114039110383837680532839357330122110083852606566539274542675610027360019950",
    "13797407254049578892558659678301412009420976478785095908341634951383899089746",
    "1567866070414329750775910699766818615219548359954086897757106147604784484441",
    "13339212963883199368280162817431974212817754571025038251405900286064469153324",
    "16308079225829815891179457364336758258300263036359238902035616374231198388569",
    "13341477312864972540533747825700591264482489464234444081380965620800158544381",
    "5835019489685193514896092004927748629603724243163292826607862076324948681007",
    "9005675619081369148233058239738044873558340197199291105422763806352890553078",
    "9127879802820507093996880023188341697795777160372831221359364987799333867253",
    "10015690665280839387493429696402645811194866668299701956567468810208894535268",
    "6281127498773182070960872411236205898913746503924028016245951308766967959102",
    "10439200133205867615372125598788547563129213277698583953833139250856607267971",
    "19505958014948823158816635062590521190364182493575970798833644660899083948782",
    "13248789426835380605878226327517778214714022088448162226060020253258422367029",
    "28458828234722041996901193531735404983716571917805509417107152165949376906472",
    "4042272678949825039592577687689093448033210720418780066529841822227362612041",
    "20682673807484138545785275291286439667784595214246156101407328445174777595116",
    "20205674023128460791574355630073770178791640618054867112332699437401302339356",
    "10452291131349544130985016802413809569059711381364977709850818053517153727479",
    "24141956882413691129714725899869162795887822496192432915248025890754706239186",
    "825146836097478701007443552018881441375287774046581168246254087112",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0"];

const enc2Str = await getEncryptedNoteFromFieldData(EncryptedNoteFieldData.fromFields(enc2.map(e => Field(e))));
fs.writeFileSync('./2.json', JSON.stringify(enc2Str));

const enc3 = ["12734268911949550276421679018777640641622933960242307061615897253447373823689",
    "23738502215907970743686409360113374737442402703950404910563054657904813447546",
    "14356658226385701484647120356048940293147349146087522331460829518760865065344",
    "8110486728673310977273849376156333663897759318632168646673074507436148319750",
    "8994519483802683124555306153338498001132050332728024035047542309167329518408",
    "20140318756856309249727762537925869603624444314543220817664287688695938405827",
    "6238200580365816360895988377117122121003793376071340507495346289394144844451",
    "26500198770313608526312346445499091697405699875921689926894570344036153675551",
    "23485608904030615959592844017538684599731431736544455513504804294173436420492",
    "10688953791808344923772853987618273666494826279183817981598451205098465049720",
    "25119428965467541007368883889885713366133787426697991705137816352277319369457",
    "27076538207398925184683511255932248792727997382347603799065800685970649343925",
    "8566588119080303374561466398932974148942749798812591945596385597010925799232",
    "29374966277762512855703434031709993137939120688864481188481138991784386625",
    "2257043113738570738138955212022679822193497761689152806732501627480212343673",
    "2410835290259715578644991378298811417729212607689085522701454452653018476952",
    "16180734899268502360518768489672357228012399297103391065737748985115121500865",
    "14537011396379550950207832431241562496387458904871951090069621170295750390017",
    "13442452627660511999926879380272240134967636337362396826870623544058754826670",
    "13293503991522898671108163571634435244565537972911023821846510085508371963376",
    "7952091246144150194889144824877752515380110103572208157005259494603227490898",
    "11338510262463236173593172290279927413359823331825843080236796477395869504353",
    "27869605501227013694762935900250173382073111912933068331325658025324876390318",
    "3428393932191339766877587619488443101760293419290282257846088223950256182716",
    "1126486776229975808654039214759867478470989025585280847268967595668615754155",
    "27037692730580913376036476862475081225531710930030792209526536612754399543357",
    "3223229828505776175810299173833831103570878032295891698854908484",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0",
    "0"];

const enc3Str = await getEncryptedNoteFromFieldData(EncryptedNoteFieldData.fromFields(enc3.map(e => Field(e))));
fs.writeFileSync('./3.json', JSON.stringify(enc3Str));
